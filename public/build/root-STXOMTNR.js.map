{
  "version": 3,
  "sources": ["../../app/root.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/root.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/root.tsx\");\n}\n// REMIX HMR END\n\nimport { Links, Meta, Outlet, Scripts, ScrollRestoration, useLoaderData, useMatches } from '@remix-run/react';\nimport fonts from './styles/fonts.css';\nimport tailwind from './tailwind.css';\nexport const links = () => [{\n  rel: 'stylesheet',\n  href: tailwind\n}, {\n  rel: 'stylesheet',\n  href: fonts\n}, {\n  rel: 'preconnect',\n  href: 'https://fonts.googleapis.com'\n}, {\n  rel: 'preconnect',\n  href: 'https://fonts.gstatic.com',\n  crossOrigin: 'anonymous'\n}, {\n  rel: 'stylesheet',\n  href: 'https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap'\n}];\nexport const loader = async ({\n  request\n}) => {\n  // Fetch the SVG sprite content from our own route\n  const url = new URL(request.url);\n  const spritesUrl = `${url.origin}/sprites.svg`;\n  const response = await fetch(spritesUrl);\n  const svgContent = await response.text();\n  return {\n    svgContent\n  };\n};\nexport default function App() {\n  _s();\n  const {\n    svgContent\n  } = useLoaderData();\n  const matches = useMatches();\n  console.log(matches);\n  return <html lang='en'>\n      <head>\n        <meta charSet='utf-8' />\n        <meta name='viewport' content='width=device-width, initial-scale=1' />\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        <div style={{\n        display: 'none'\n      }} aria-hidden='true' dangerouslySetInnerHTML={{\n        __html: svgContent\n      }} />\n        <Outlet />\n        <ScrollRestoration />\n        <Scripts />\n      </body>\n    </html>;\n}\n_s(App, \"7VhdAVODJEsC1Jtxep1UcucJwHU=\", false, function () {\n  return [useLoaderData, useMatches];\n});\n_c = App;\nvar _c;\n$RefreshReg$(_c, \"App\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA6DQ;AA5DR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mBAAqB,EAAE;AAAA,EAChE;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAc;AAChB;AAMO,IAAM,QAAQ,MAAM,CAAC;AAAA,EAC1B,KAAK;AAAA,EACL,MAAM;AACR,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACR,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACR,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AAAA,EACN,aAAa;AACf,GAAG;AAAA,EACD,KAAK;AAAA,EACL,MAAM;AACR,CAAC;AAac,SAAR,MAAuB;AAC5B,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,EACF,IAAI,cAAc;AAClB,QAAM,UAAU,WAAW;AAC3B,UAAQ,IAAI,OAAO;AACnB,SAAO,mDAAC,UAAK,MAAK,MACd;AAAA,uDAAC,UACC;AAAA,yDAAC,UAAK,SAAQ,WAAd;AAAA;AAAA;AAAA;AAAA,aAAsB;AAAA,MACtB,mDAAC,UAAK,MAAK,YAAW,SAAQ,yCAA9B;AAAA;AAAA;AAAA;AAAA,aAAoE;AAAA,MACpE,mDAAC,UAAD;AAAA;AAAA;AAAA;AAAA,aAAM;AAAA,MACN,mDAAC,WAAD;AAAA;AAAA;AAAA;AAAA,aAAO;AAAA,SAJT;AAAA;AAAA;AAAA;AAAA,WAKA;AAAA,IACA,mDAAC,UACC;AAAA,yDAAC,SAAI,OAAO;AAAA,QACZ,SAAS;AAAA,MACX,GAAG,eAAY,QAAO,yBAAyB;AAAA,QAC7C,QAAQ;AAAA,MACV,KAJE;AAAA;AAAA;AAAA;AAAA,aAIC;AAAA,MACD,mDAAC,YAAD;AAAA;AAAA;AAAA;AAAA,aAAQ;AAAA,MACR,mDAAC,uBAAD;AAAA;AAAA;AAAA;AAAA,aAAmB;AAAA,MACnB,mDAAC,aAAD;AAAA;AAAA;AAAA;AAAA,aAAS;AAAA,SARX;AAAA;AAAA;AAAA;AAAA,WASA;AAAA,OAhBG;AAAA;AAAA;AAAA;AAAA,SAiBL;AACJ;AACA,GAAG,KAAK,gCAAgC,OAAO,WAAY;AACzD,SAAO,CAAC,eAAe,UAAU;AACnC,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,KAAK;AAEtB,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}

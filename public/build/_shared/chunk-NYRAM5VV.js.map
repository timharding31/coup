{
  "version": 3,
  "sources": ["../../../app/components/TextInput.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/TextInput.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/TextInput.tsx\");\n  import.meta.hot.lastModified = \"1738787561972.732\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nconst sizeStyles = {\n  default: 'h-10 px-4 py-2',\n  sm: 'h-9 px-3',\n  lg: 'h-11 px-8'\n};\nconst variantStyles = {\n  primary: 'bg-nord-6 text-nord-0 border-2 border-nord-0 focus:border-nord-8 placeholder-nord-3',\n  secondary: 'bg-nord-5 text-nord-0 border-2 border-nord-8 focus:border-nord-9 placeholder-nord-3',\n  minimal: 'bg-nord-4 text-nord-0 border-2 border-transparent focus:border-nord-8 placeholder-nord-3'\n};\nexport const TextInput = React.forwardRef(_c = ({\n  className = 'font-medium',\n  variant = 'primary',\n  size = 'default',\n  error,\n  label,\n  type = 'text',\n  required,\n  ...props\n}, ref) => {\n  const baseClasses = 'w-full transition-all duration-200 focus:outline-none rounded-xl';\n  const errorClasses = error ? 'border-nord-11 focus:border-nord-11' : '';\n  return <div className='flex flex-col gap-2'>\n        {label && <label className='text-nord-6 font-medium text-sm'>\n            {label}\n            {required && <span className='text-nord-11'> *</span>}\n          </label>}\n        <input ref={ref} className={`\n            ${baseClasses} \n            ${variantStyles[variant]} \n            ${sizeStyles[size]} \n            ${errorClasses}\n            ${className}\n          `} type={type} required={required} {...props} />\n        {error && props.id && <span className='text-nord-11 text-sm' id={`${props.id}-error`}>\n            {error}\n          </span>}\n      </div>;\n});\n_c2 = TextInput;\nTextInput.displayName = 'TextInput';\nvar _c, _c2;\n$RefreshReg$(_c, \"TextInput$React.forwardRef\");\n$RefreshReg$(_c2, \"TextInput\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;AAoBA,mBAAkB;AA0BO;AA7CzB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,mCAAqC,EAAE;AAAA,EAChF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA8B;AAC9B,cAAY,IAAI,eAAe;AACjC;AAIA,IAAM,aAAa;AAAA,EACjB,SAAS;AAAA,EACT,IAAI;AAAA,EACJ,IAAI;AACN;AACA,IAAM,gBAAgB;AAAA,EACpB,SAAS;AAAA,EACT,WAAW;AAAA,EACX,SAAS;AACX;AACO,IAAM,YAAY,aAAAA,QAAM,WAAW,KAAK,CAAC;AAAA,EAC9C,YAAY;AAAA,EACZ,UAAU;AAAA,EACV,OAAO;AAAA,EACP;AAAA,EACA;AAAA,EACA,OAAO;AAAA,EACP;AAAA,EACA,GAAG;AACL,GAAG,QAAQ;AACT,QAAM,cAAc;AACpB,QAAM,eAAe,QAAQ,wCAAwC;AACrE,SAAO,mDAAC,SAAI,WAAU,uBACf;AAAA,aAAS,mDAAC,WAAM,WAAU,mCACtB;AAAA;AAAA,MACA,YAAY,mDAAC,UAAK,WAAU,gBAAe,kBAA/B;AAAA;AAAA;AAAA;AAAA,aAAiC;AAAA,SAFxC;AAAA;AAAA;AAAA;AAAA,WAGR;AAAA,IACF,mDAAC,WAAM,KAAU,WAAW;AAAA,cACtB;AAAA,cACA,cAAc,OAAO;AAAA,cACrB,WAAW,IAAI;AAAA,cACf;AAAA,cACA;AAAA,aACD,MAAY,UAAqB,GAAG,SANzC;AAAA;AAAA;AAAA;AAAA,WAMgD;AAAA,IAC/C,SAAS,MAAM,MAAM,mDAAC,UAAK,WAAU,wBAAuB,IAAI,GAAG,MAAM,YACrE,mBADiB;AAAA;AAAA;AAAA;AAAA,WAEpB;AAAA,OAdD;AAAA;AAAA;AAAA;AAAA,SAeH;AACN,CAAC;AACD,MAAM;AACN,UAAU,cAAc;AACxB,IAAI;AAAJ,IAAQ;AACR,aAAa,IAAI,4BAA4B;AAC7C,aAAa,KAAK,WAAW;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["React"]
}

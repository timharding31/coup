{
  "version": 3,
  "sources": ["../../../app/components/PlayingCard.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/PlayingCard.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/PlayingCard.tsx\");\n  import.meta.hot.lastModified = \"1738799108183.9502\";\n}\n// REMIX HMR END\n\nimport React from 'react';\nimport { CardType } from '~/types';\nconst colorSchemes = {\n  [CardType.AMBASSADOR]: 'bg-gradient-to-br from-amber-200 to-amber-600',\n  [CardType.ASSASSIN]: 'bg-gradient-to-br from-emerald-900 to-black',\n  [CardType.CAPTAIN]: 'bg-gradient-to-br from-slate-600 to-gray-800',\n  [CardType.CONTESSA]: 'bg-gradient-to-br from-rose-400 to-orange-800',\n  [CardType.DUKE]: 'bg-gradient-to-br from-cyan-600 to-purple-800'\n};\nconst decorativeElements = {\n  [CardType.AMBASSADOR]: 'border-amber-400',\n  [CardType.ASSASSIN]: 'border-emerald-800',\n  [CardType.CAPTAIN]: 'border-gray-600',\n  [CardType.CONTESSA]: 'border-rose-800',\n  [CardType.DUKE]: 'border-cyan-800'\n};\nconst textColors = {\n  [CardType.AMBASSADOR]: 'text-amber-900',\n  [CardType.ASSASSIN]: 'text-emerald-400',\n  [CardType.CAPTAIN]: 'text-slate-300',\n  [CardType.CONTESSA]: 'text-teal-100',\n  [CardType.DUKE]: 'text-purple-900'\n};\nexport const PlayingCard = ({\n  type: character,\n  isFaceDown,\n  isRevealed\n}) => {\n  if (!character || isFaceDown) {\n    // Server will omit type for face-down cards\n    return <FaceDownCard />;\n  }\n  let className = 'card-container';\n  if (isRevealed) {\n    className += ' rotate-180 grayscale-[80%] transform-origin-center';\n  } else {\n    className += ' z-10';\n  }\n  return <div className={className}>\n      <div className={`rounded-card w-full h-full nord-shadow relative overflow-hidden ${colorSchemes[character]}`}>\n        {/* Card corners */}\n        <div data-hide-lt-sm className='absolute top-2 left-4 px-[4cqi] flex flex-col items-start z-10'>\n          <span className={`text-[12cqi] font-bold ${textColors[character]} font-odachi`}>{character.slice()}</span>\n        </div>\n\n        {/* Mirrored name for bottom */}\n        <div data-hide-lt-sm className='absolute bottom-2 right-4 px-[4cqi] flex flex-col items-end rotate-180 z-10 mix-blend-exclusion'>\n          <span className={`text-[12cqi] font-bold ${textColors[character]} font-odachi`}>{character.slice()}</span>\n        </div>\n\n        {/* Decorative border */}\n        <div data-hide-lt-sm className={`absolute inset-4 border-4 ${decorativeElements[character]} rounded-lg opacity-40`} />\n\n        <div className='absolute bottom-0 left-0 w-full'>\n          <img src={`/images/${character.toLowerCase()}.png`} alt={character} className='w-full object-contain mix-blend-hard-light scale-x-[-1]' />\n        </div>\n      </div>\n    </div>;\n};\n_c = PlayingCard;\nconst FaceDownCard = () => {\n  return <div className='card-container'>\n      <div className='rounded-card w-full h-full nord-shadow relative overflow-hidden'>\n        <svg className='absolute inset-0 w-full h-full bg-nord-10 text-nord-9' viewBox='0 0 60 80'>\n          <use href='#card-back' />\n        </svg>\n      </div>\n    </div>;\n};\n_c2 = FaceDownCard;\nvar _c, _c2;\n$RefreshReg$(_c, \"PlayingCard\");\n$RefreshReg$(_c2, \"FaceDownCard\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": []
}

{
  "version": 3,
  "sources": ["../../../app/routes/game.$gameId._index.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/game.$gameId._index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/game.$gameId._index.tsx\");\n  import.meta.hot.lastModified = \"1738792182995.7576\";\n}\n// REMIX HMR END\n\nimport { redirect } from '@remix-run/node';\nexport const loader = async ({\n  request,\n  context,\n  params\n}) => {\n  const {\n    sessionService,\n    gameService\n  } = context;\n  const {\n    playerId\n  } = await sessionService.requirePlayerSession(request);\n  const gameId = params.gameId;\n  const {\n    game\n  } = await gameService.getGame(gameId);\n  if (!playerId || !game) {\n    throw redirect('/');\n  }\n  switch (game.status) {\n    case 'COMPLETED':\n      throw redirect('completed');\n    case 'IN_PROGRESS':\n      throw redirect('in-progress');\n    case 'WAITING':\n      throw redirect('waiting');\n  }\n};\nexport default function GameIndex() {\n  return null;\n}\n_c = GameIndex;\nvar _c;\n$RefreshReg$(_c, \"GameIndex\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;AAoBA,kBAAyB;AAnBzB,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,yCAA2C,EAAE;AAAA,EACtF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAON,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAoC;AACpC,cAAY,IAAI,eAAe;AACjC;AAgCe,SAAR,YAA6B;AAClC,SAAO;AACT;AACA,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}

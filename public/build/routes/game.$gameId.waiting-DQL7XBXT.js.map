{
  "version": 3,
  "sources": ["../../../app/routes/game.$gameId.waiting.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/game.$gameId.waiting.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/game.$gameId.waiting.tsx\");\n  import.meta.hot.lastModified = \"1738797716951.2144\";\n}\n// REMIX HMR END\n\nimport { redirect } from '@remix-run/node';\nimport { Form, useOutletContext } from '@remix-run/react';\nimport { useRef } from 'react';\nimport { GameTable } from '~/components/GameTable';\nexport const action = async ({\n  params,\n  request,\n  context\n}) => {\n  const {\n    sessionService,\n    socketService\n  } = context;\n  const {\n    playerId\n  } = await sessionService.getPlayerSession(request);\n  if (!playerId) {\n    return null;\n  }\n  await socketService.startGame(params.gameId, playerId);\n  return redirect(`/game/${params.gameId}/in-progress`);\n};\nexport default function GameWaiting() {\n  _s();\n  const {\n    playerId,\n    hostId,\n    status,\n    pin\n  } = useOutletContext();\n  const formRef = useRef(null);\n  return <>\n      <div className='text-nord-6 text-xl p-2'>\n        PIN: <strong>{pin}</strong>\n      </div>\n      {playerId === hostId && <Form method='post' className='flex-none' ref={formRef} />}\n      <div className='flex-auto'>\n        <GameTable playerId={playerId} status='WAITING' onStartGame={playerId === hostId ? () => formRef.current?.submit() : null} />\n      </div>\n    </>;\n}\n_s(GameWaiting, \"8c1rOZpxp43pR+qy+Tya+NGkaeI=\", false, function () {\n  return [useOutletContext];\n});\n_c = GameWaiting;\nvar _c;\n$RefreshReg$(_c, \"GameWaiting\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqBA,kBAAyB;AAEzB,IAAAA,gBAAuB;AA6Bd;AAnDT,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,0CAA4C,EAAE;AAAA,EACvF;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAqC;AACrC,cAAY,IAAI,eAAe;AACjC;AAyBe,SAAR,cAA+B;AACpC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,iBAAiB;AACrB,QAAM,cAAU,sBAAO,IAAI;AAC3B,SAAO,sFACH;AAAA,uDAAC,SAAI,WAAU,2BAA0B;AAAA;AAAA,MAClC,mDAAC,YAAQ,iBAAT;AAAA;AAAA;AAAA;AAAA,aAAa;AAAA,SADpB;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,IACC,aAAa,UAAU,mDAAC,QAAK,QAAO,QAAO,WAAU,aAAY,KAAK,WAA/C;AAAA;AAAA;AAAA;AAAA,WAAwD;AAAA,IAChF,mDAAC,SAAI,WAAU,aACb,6DAAC,aAAU,UAAoB,QAAO,WAAU,aAAa,aAAa,SAAS,MAAM,QAAQ,SAAS,OAAO,IAAI,QAArH;AAAA;AAAA;AAAA;AAAA,WAA2H,KAD7H;AAAA;AAAA;AAAA;AAAA,WAEA;AAAA,OAPG;AAAA;AAAA;AAAA;AAAA,SAQL;AACJ;AACA,GAAG,aAAa,gCAAgC,OAAO,WAAY;AACjE,SAAO,CAAC,gBAAgB;AAC1B,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,aAAa;AAE9B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": ["import_react"]
}

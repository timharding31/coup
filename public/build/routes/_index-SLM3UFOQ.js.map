{
  "version": 3,
  "sources": ["../../../app/routes/_index.tsx", "../../../app/components/PinInput.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/_index.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/_index.tsx\");\n  import.meta.hot.lastModified = \"1738791349572.9065\";\n}\n// REMIX HMR END\n\nimport { redirect } from '@remix-run/node';\nimport { Form } from '@remix-run/react';\nimport { useState } from 'react';\nimport { Button } from '~/components/Button';\nimport { PinInput } from '~/components/PinInput';\nexport const meta = () => {\n  return [{\n    title: ''\n  }, {\n    name: 'description',\n    content: ''\n  }];\n};\nexport const loader = async ({\n  request,\n  context\n}) => {\n  const {\n    sessionService\n  } = context;\n  const {\n    playerId\n  } = await sessionService.requirePlayerSession(request);\n  return {\n    playerId\n  };\n};\nexport const action = async ({\n  request,\n  context\n}) => {\n  const {\n    sessionService,\n    gameService\n  } = context;\n  const {\n    playerId\n  } = await sessionService.getPlayerSession(request);\n  if (!playerId) {\n    return null;\n  }\n  const formData = await request.formData();\n  const intent = formData.get('intent');\n  let pin = '';\n  let gameId = null;\n  switch (intent) {\n    case 'create':\n      gameId = (await gameService.createGame(playerId)).gameId;\n      break;\n    case 'join':\n      pin = formData.get('pin')?.toString() || '';\n      if (!pin) {\n        return {\n          error: 'PIN is required'\n        };\n      }\n      gameId = (await gameService.joinGameByPin(playerId, pin.toString())).gameId;\n      break;\n  }\n  if (gameId) {\n    return redirect(`/game/${gameId}`);\n  }\n  return null;\n};\nexport default function Index() {\n  _s();\n  const [pin, setPin] = useState('');\n  return <div className='flex flex-col items-stretch gap-8 w-full max-w-[800px] p-4 m-auto'>\n      <Form method='post' className='contents'>\n        <input type='hidden' name='intent' value='create' />\n        <Button variant='secondary' type='submit'>\n          Create new game\n        </Button>\n      </Form>\n\n      <div className='text-nord-6 text-center'>\u2014 or \u2014</div>\n\n      <Form method='post'>\n        <input type='hidden' name='intent' value='join' />\n        <div className='flex flex-col items-stretch gap-2'>\n          <PinInput name='pin' value={pin} onChange={setPin} required />\n          <Button variant='primary' type='submit'>\n            Join by PIN\n          </Button>\n        </div>\n      </Form>\n    </div>;\n}\n_s(Index, \"ckTUeThNO5ujnfDny4OgbNBJ+NQ=\");\n_c = Index;\nvar _c;\n$RefreshReg$(_c, \"Index\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/components/PinInput.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/components/PinInput.tsx\");\n  import.meta.hot.lastModified = \"1738787498094.511\";\n}\n// REMIX HMR END\n\nimport React, { useState, useRef } from 'react';\nimport { TextInput } from './TextInput';\nexport const PinInput = ({\n  value,\n  onChange,\n  error,\n  label,\n  ...inputProps\n}) => {\n  _s();\n  const [focused, setFocused] = useState(false);\n  const inputRef = useRef(null);\n  const handleChange = e => {\n    const newValue = e.target.value.toUpperCase().replace(/[^A-Z0-9]/g, '').slice(0, 4);\n    onChange(newValue);\n  };\n  const displayValue = value.padEnd(4, '\u2022');\n  return <div className='relative'>\n      <TextInput ref={inputRef} value={value} onChange={handleChange} onFocus={() => setFocused(true)} onBlur={() => setFocused(false)} className='text-center tracking-[1em] font-bold' maxLength={4} pattern='[A-Z0-9]*' autoComplete='off' spellCheck={false} error={error} label={label} size='lg' {...inputProps} />\n\n      {!focused && value.length < 4 && <div className='absolute inset-0 flex items-center justify-center pointer-events-none' style={{\n      marginTop: label ? '34px' : '0'\n    }}>\n          <div className='flex gap-4'>\n            {Array.from({\n          length: 4\n        }).map((_, index) => <span key={index} className={`\n                  w-4 h-4 rounded-full \n                  ${index < value.length ? 'bg-nord-8' : 'bg-nord-3'}\n                `} />)}\n          </div>\n        </div>}\n    </div>;\n};\n_s(PinInput, \"zJA/JXynid6Cz9SaiU3RIOIK700=\");\n_c = PinInput;\nvar _c;\n$RefreshReg$(_c, \"PinInput\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": "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",
  "names": ["import_react", "import_jsx_dev_runtime", "_s", "_s", "_c"]
}

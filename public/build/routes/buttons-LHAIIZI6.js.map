{
  "version": 3,
  "sources": ["../../../app/routes/buttons.tsx"],
  "sourcesContent": ["// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/buttons.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/buttons.tsx\");\n  import.meta.hot.lastModified = \"1738780086809.2278\";\n}\n// REMIX HMR END\n\nimport { useState } from 'react';\nimport { Button } from '~/components/Button';\nexport default function ButtonDemo() {\n  _s();\n  const now = Math.floor(Date.now());\n  const [timeoutAt] = useState(now + 20_000);\n  const remainingTime = Math.max(0, timeoutAt - now);\n  const variants = [['neutral', 'neutralOutline'], ['amber', 'amberOutline'], ['black', 'blackOutline'], ['blue', 'blueOutline'], ['rose', 'roseOutline'], ['purple', 'purpleOutline'], ['red', 'redOutline'], ['emerald', 'emeraldOutline']];\n  return <div className='p-8 space-y-8 bg-white'>\n      <h2 className='text-lg font-semibold mb-4'>Button Variants with Timer</h2>\n      <div className='text-sm text-gray-500 mb-4'>Timer starts with {remainingTime}s remaining and counts down</div>\n      {variants.map(([filled, outline]) => <div key={filled} className='space-y-2'>\n          <div className='flex gap-4'>\n            <Button variant={filled} timeoutAt={timeoutAt}>\n              {filled}\n            </Button>\n            <Button variant={outline} timeoutAt={timeoutAt}>\n              {outline}\n            </Button>\n          </div>\n          <div className='flex gap-4'>\n            <Button variant={filled}>No Timer</Button>\n            <Button variant={filled} timeoutAt={timeoutAt} disabled>\n              Disabled with Timer\n            </Button>\n          </div>\n        </div>)}\n    </div>;\n}\n_s(ButtonDemo, \"MI982z0Ualry0ztsEhWXYReDhLA=\");\n_c = ButtonDemo;\nvar _c;\n$RefreshReg$(_c, \"ButtonDemo\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAqBA,mBAAyB;AASnB;AA7BN,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,6BAA+B,EAAE;AAAA,EAC1E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAAwB;AACxB,cAAY,IAAI,eAAe;AACjC;AAKe,SAAR,aAA8B;AACnC,KAAG;AACH,QAAM,MAAM,KAAK,MAAM,KAAK,IAAI,CAAC;AACjC,QAAM,CAAC,SAAS,QAAI,uBAAS,MAAM,GAAM;AACzC,QAAM,gBAAgB,KAAK,IAAI,GAAG,YAAY,GAAG;AACjD,QAAM,WAAW,CAAC,CAAC,WAAW,gBAAgB,GAAG,CAAC,SAAS,cAAc,GAAG,CAAC,SAAS,cAAc,GAAG,CAAC,QAAQ,aAAa,GAAG,CAAC,QAAQ,aAAa,GAAG,CAAC,UAAU,eAAe,GAAG,CAAC,OAAO,YAAY,GAAG,CAAC,WAAW,gBAAgB,CAAC;AAC1O,SAAO,mDAAC,SAAI,WAAU,0BAClB;AAAA,uDAAC,QAAG,WAAU,8BAA6B,0CAA3C;AAAA;AAAA;AAAA;AAAA,WAAqE;AAAA,IACrE,mDAAC,SAAI,WAAU,8BAA6B;AAAA;AAAA,MAAmB;AAAA,MAAc;AAAA,SAA7E;AAAA;AAAA;AAAA;AAAA,WAAwG;AAAA,IACvG,SAAS,IAAI,CAAC,CAAC,QAAQ,OAAO,MAAM,mDAAC,SAAiB,WAAU,aAC7D;AAAA,yDAAC,SAAI,WAAU,cACb;AAAA,2DAAC,UAAO,SAAS,QAAQ,WACtB,oBADH;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,QACA,mDAAC,UAAO,SAAS,SAAS,WACvB,qBADH;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WANF;AAAA;AAAA;AAAA;AAAA,aAOA;AAAA,MACA,mDAAC,SAAI,WAAU,cACb;AAAA,2DAAC,UAAO,SAAS,QAAQ,wBAAzB;AAAA;AAAA;AAAA;AAAA,eAAiC;AAAA,QACjC,mDAAC,UAAO,SAAS,QAAQ,WAAsB,UAAQ,MAAC,mCAAxD;AAAA;AAAA;AAAA;AAAA,eAEA;AAAA,WAJF;AAAA;AAAA;AAAA;AAAA,aAKA;AAAA,SAd2C,QAAV;AAAA;AAAA;AAAA;AAAA,WAenC,CAAM;AAAA,OAlBL;AAAA;AAAA;AAAA;AAAA,SAmBL;AACJ;AACA,GAAG,YAAY,8BAA8B;AAC7C,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,YAAY;AAE7B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}

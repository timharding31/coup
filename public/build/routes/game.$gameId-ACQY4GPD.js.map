{
  "version": 3,
  "sources": ["empty-module:~/services/socket.server", "../../../app/routes/game.$gameId.tsx"],
  "sourcesContent": ["module.exports = {};", "// REMIX HMR BEGIN\nif (!window.$RefreshReg$ || !window.$RefreshSig$ || !window.$RefreshRuntime$) {\n  console.warn('remix:hmr: React Fast Refresh only works when the Remix compiler is running in development mode.');\n} else {\n  var prevRefreshReg = window.$RefreshReg$;\n  var prevRefreshSig = window.$RefreshSig$;\n  window.$RefreshReg$ = (type, id) => {\n    window.$RefreshRuntime$.register(type, \"\\\"app/routes/game.$gameId.tsx\\\"\" + id);\n  }\n  window.$RefreshSig$ = window.$RefreshRuntime$.createSignatureFunctionForTransform;\n}\nvar _s = $RefreshSig$();\nimport * as __hmr__ from \"remix:hmr\";\nif (import.meta) {\n  import.meta.hot = __hmr__.createHotContext(\n  //@ts-expect-error\n  \"app/routes/game.$gameId.tsx\");\n  import.meta.hot.lastModified = \"1738797745888.47\";\n}\n// REMIX HMR END\n\nimport { redirect } from '@remix-run/node';\nimport { Outlet, useLoaderData } from '@remix-run/react';\nimport { GameSocketProvider } from '~/context/GameSocket';\nimport { prepareGameForClient } from '~/services/socket.server';\nexport const loader = async ({\n  request,\n  context,\n  params\n}) => {\n  const {\n    sessionService,\n    gameService\n  } = context;\n  const {\n    playerId\n  } = await sessionService.requirePlayerSession(request);\n  const gameId = params.gameId;\n  const {\n    game\n  } = await gameService.getGame(gameId);\n  if (!game) {\n    throw redirect('/');\n  }\n  const socketUrl = process.env.SOCKET_URL || 'http://localhost:3000';\n  return {\n    gameId,\n    playerId,\n    socketUrl,\n    game: prepareGameForClient(game, playerId)\n  };\n};\nexport default function GameRoute() {\n  _s();\n  const {\n    gameId,\n    playerId,\n    socketUrl,\n    game\n  } = useLoaderData();\n  return <GameSocketProvider gameId={gameId} playerId={playerId} socketUrl={socketUrl} game={game}>\n      <div className='fixed top-0 bottom-0 left-[50%] w-full max-w-[480px] translate-x-[-50%] flex flex-col items-stretch justify-between'>\n        <Outlet context={{\n        playerId,\n        hostId: game.hostId,\n        status: game.status,\n        pin: game.pin\n      }} />\n      </div>\n      {/* <GameSocketContext.Consumer>\n        {value =>\n          value?.game ? (\n            <div>\n              Game:\n              <pre>{JSON.stringify(value.game, null, 2)}</pre>\n            </div>\n          ) : null\n        }\n       </GameSocketContext.Consumer> */}\n    </GameSocketProvider>;\n}\n_s(GameRoute, \"0yAXoM5uXkKZoK4AV4L1QAYvhrs=\", false, function () {\n  return [useLoaderData];\n});\n_c = GameRoute;\nvar _c;\n$RefreshReg$(_c, \"GameRoute\");\n\nwindow.$RefreshReg$ = prevRefreshReg;\nwindow.$RefreshSig$ = prevRefreshSig;"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA,WAAO,UAAU,CAAC;AAAA;AAAA;;;ACqBlB,kBAAyB;AAGzB,oBAAqC;AAsC7B;AA7DR,IAAI,CAAC,OAAO,gBAAgB,CAAC,OAAO,gBAAgB,CAAC,OAAO,kBAAkB;AAC5E,UAAQ,KAAK,kGAAkG;AACjH,OAAO;AACD,mBAAiB,OAAO;AACxB,mBAAiB,OAAO;AAC5B,SAAO,eAAe,CAAC,MAAM,OAAO;AAClC,WAAO,iBAAiB,SAAS,MAAM,kCAAoC,EAAE;AAAA,EAC/E;AACA,SAAO,eAAe,OAAO,iBAAiB;AAChD;AANM;AACA;AAMN,IAAI,KAAK,aAAa;AAEtB,IAAI,aAAa;AACf,cAAY,MAAc;AAAA;AAAA,IAE1B;AAAA,EAA6B;AAC7B,cAAY,IAAI,eAAe;AACjC;AAkCe,SAAR,YAA6B;AAClC,KAAG;AACH,QAAM;AAAA,IACJ;AAAA,IACA;AAAA,IACA;AAAA,IACA;AAAA,EACF,IAAI,cAAc;AAClB,SAAO,mDAAC,sBAAmB,QAAgB,UAAoB,WAAsB,MACjF,6DAAC,SAAI,WAAU,uHACb,6DAAC,UAAO,SAAS;AAAA,IACjB;AAAA,IACA,QAAQ,KAAK;AAAA,IACb,QAAQ,KAAK;AAAA,IACb,KAAK,KAAK;AAAA,EACZ,KALE;AAAA;AAAA;AAAA;AAAA,SAKC,KANH;AAAA;AAAA;AAAA;AAAA,SAOA,KARG;AAAA;AAAA;AAAA;AAAA,SAmBL;AACJ;AACA,GAAG,WAAW,gCAAgC,OAAO,WAAY;AAC/D,SAAO,CAAC,aAAa;AACvB,CAAC;AACD,KAAK;AACL,IAAI;AACJ,aAAa,IAAI,WAAW;AAE5B,OAAO,eAAe;AACtB,OAAO,eAAe;",
  "names": []
}
